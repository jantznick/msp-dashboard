<%- include('../partials/header') %>

<!-- React via CDN -->
<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

<div id="manage-users-root" class="container mx-auto mt-10 px-4"></div>

<script type="text/babel">
    const { useState } = React;

    const EditUserModal = ({ user, companies, onClose, onSave }) => {
        if (!user) return null;

        const [companyId, setCompanyId] = useState(user.companyId || "");
        const [isSaving, setIsSaving] = useState(false);

        const handleSubmit = async (e) => {
            e.preventDefault();
            setIsSaving(true);
            await onSave(user.id, { companyId: companyId || null });
            setIsSaving(false);
            onClose();
        };

        return (
            <div className="fixed z-50 inset-0 overflow-y-auto">
                <div className="flex items-center justify-center min-h-screen">
                    <div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" onClick={onClose}></div>
                    <div className="bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full z-50">
                        <form onSubmit={handleSubmit}>
                            <div className="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                                <h3 className="text-lg leading-6 font-medium text-gray-900">Edit User: {user.email}</h3>
                                <div className="mt-4">
                                    <label htmlFor="editCompanyId" className="block text-sm font-medium text-gray-700">Company</label>
                                    <select id="editCompanyId" value={companyId} onChange={(e) => setCompanyId(e.target.value)} className="mt-1 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                        <option value="">No Company</option>
                                        {companies.map(company => (
                                            <option key={company.id} value={company.id}>{company.name}</option>
                                        ))}
                                    </select>
                                </div>
                            </div>
                            <div className="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                                <button type="submit" disabled={isSaving} className="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 sm:ml-3 sm:w-auto sm:text-sm disabled:opacity-50">
                                    {isSaving ? 'Saving...' : 'Save'}
                                </button>
                                <button type="button" onClick={onClose} className="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 sm:mt-0 sm:w-auto sm:text-sm">
                                    Cancel
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        );
    };

    const ManageUsersPage = ({ initialUsers, initialCompanies }) => {
        const [users, setUsers] = useState(initialUsers);
        const [companies] = useState(initialCompanies);
        const [editingUser, setEditingUser] = useState(null);
        
        const getCompanyName = (companyId) => {
            const company = companies.find(c => c.id === companyId);
            return company ? company.name : 'N/A';
        };

        const handleSave = async (userId, data) => {
            try {
                const response = await fetch(`/admin/users/${userId}/update`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                if (response.ok) {
                    setUsers(users.map(u => u.id === userId ? { ...u, companyId: data.companyId, company: data.companyId ? { name: getCompanyName(data.companyId) } : null } : u));
                } else {
                    alert('Failed to save user.');
                }
            } catch (error) {
                alert('An error occurred while saving.');
            }
        };

        return (
            <div>
                <h1 className="text-3xl font-bold text-gray-800 mb-6">Manage Users</h1>
                <div className="bg-white p-6 rounded-lg shadow-md">
                    <h2 className="text-2xl font-semibold text-gray-700 mb-4">All Users</h2>
                    <div className="overflow-x-auto">
                        <table className="min-w-full bg-white">
                             <thead className="bg-gray-100">
                                <tr>
                                    <th className="py-2 px-4 border-b">Email</th>
                                    <th className="py-2 px-4 border-b">Company</th>
                                    <th className="py-2 px-4 border-b">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {users.map(user => (
                                    <tr key={user.id} className="hover:bg-gray-50">
                                        <td className="py-2 px-4 border-b">{user.email}</td>
                                        <td className="py-2 px-4 border-b">{user.company ? user.company.name : 'N/A'}</td>
                                        <td className="py-2 px-4 border-b text-center">
                                            <button onClick={() => setEditingUser(user)} className="text-blue-500 hover:underline">Edit</button>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>
                <EditUserModal
                    user={editingUser}
                    companies={companies}
                    onClose={() => setEditingUser(null)}
                    onSave={handleSave}
                />
            </div>
        );
    };

    const initialUsers = <%- JSON.stringify(users) %>;
    const initialCompanies = <%- JSON.stringify(companies) %>;

    ReactDOM.render(
        <ManageUsersPage initialUsers={initialUsers} initialCompanies={initialCompanies} />,
        document.getElementById('manage-users-root')
    );
</script>

<%- include('../partials/footer') %>
